- content_for :caption, t('.caption')

.row.pb-1.border-bottom
  .col-2.text-end
    strong = colon(caption_for(Repository, :full_name))
  .col = @repository.full_name
.row.pb-1.border-bottom
  .col-2.text-end
    strong = colon(caption_for(Repository, :language))
  .col = @repository.language
.row.pb-1.border-bottom
  .col-2.text-end
    strong = colon(caption_for(Repository, :created_at))
  .col = l(@repository.created_at, format: :long)
.row.pb-1.border-bottom
  .col-2.text-end
    strong = colon(caption_for(Repository, :updated_at))
  .col = l(@repository.updated_at, format: :long)

.mt-4.mx-4
  - @repo_actions.each do |action, link_options = {}|
    - id_param_name = link_options.fetch :pass_repository_id_as, :id
    - id_param = id_param_name ? { id_param_name => @repository.id } : {}
    = button_action_link action, **id_param, caption: t(action), **link_options.except(:pass_repository_id_as)
  = button_action_link :back, action: :index, caption: t('back')
hr

table.table.table-striped
  thead
    tr
      th scope='col'
        = caption_for Repository::Check, :state
      th scope='col'
        = caption_for Repository::Check, :commit
      th scope='col'
        = caption_for Repository::Check, :check_results
      th scope='col'
        = caption_for Repository::Check, :updated_at
      th scope='col'
        = caption_for Repository::Check, :actions
  tbody
    - @repository.checks.order(created_at: :desc).each do |check|
      tr
        td scope='row'
          = t(check.state)
        td scope='row'
          == check_reference_link(check)
        td scope='row'
          == draw_check_result(check)
        td scope='row'
          = l(check.updated_at, format: :short)
        td
          - if check.state == 'success'
            span title=t('show')
              - @check_actions.each do |action, link_options = {}|
                = icon_action_link action, **link_options, id: check.id
